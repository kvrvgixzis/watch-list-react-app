{"version":3,"sources":["components/Loader.js","api/urls.js","api/TMDB.js","components/Button.js","components/FilmCard.js","pages/FilmsPage.js","redux/types.js","redux/actions/app.js","components/Header.js","components/Footer.js","components/Alert.js","components/AddForm.js","redux/actions/films.js","layouts/MainLayout.js","pages/FilmPage.js","components/App.js","redux/reducers/app.js","redux/reducers/films.js","redux/reducers/root.js","redux/store.js","redux/middleware.js","index.js"],"names":["Loader","className","role","API_FILMS","PLACEHOLDER_POSTER_URL","TMDB_SEARCH_URL","getTMDBData","title","a","filmData","originalTitle","posterUrl","split","join","url","fetch","res","json","results","length","target","console","log","poster_path","original_title","originalName","original_name","voteAvg","vote_average","voteCount","vote_count","overview","Button","clickHandler","onClick","FilmCard","film","useState","undefined","TMDBData","setTMDBData","history","useHistory","useEffect","fetchTMDBData","src","alt","type","comment","added_by","push","id","FilmsPage","films","useSelector","state","app","loading","map","CREATE_FILM","FETCH_FILMS","DELETE_FILM","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","SHOW_ADD_FORM","HIDE_ADD_FORM","showAlert","alert","dispatch","payload","setTimeout","Header","useDispatch","DevBlock","to","Footer","Alert","message","trim","AddForm","setFilm","formRef","useRef","isAddFormShow","changeInputHandler","input","prev","name","value","handleClickOutside","current","contains","document","addEventListener","removeEventListener","ref","onSubmit","e","preventDefault","Date","now","toString","method","headers","body","JSON","stringify","ok","createFilm","placeholder","onChange","select","rows","MainLayout","children","FilmPage","isLoading","setLoading","isError","setError","useParams","response","fetchFilm","App","path","initialState","root","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","next","reverse","render","getElementById"],"mappings":"8XAAaA,EAAS,WACpB,OACE,qBAAKC,UAAU,6BAA6BC,KAAK,SAAjD,SACE,qBAAKD,UAAU,UAAf,2B,sDCMOE,EAAS,UAFlB,sEAEkB,UACTC,EAAsB,sCAPlB,IAOkB,YANlB,IAMkB,0BACtBC,EAAe,4DATP,mCASO,gBCTfC,EAAW,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,yDACnBC,EAAW,CACfC,cAAe,GACfC,UAAWP,GAGRG,EANoB,yCAMNE,GANM,cAQzBF,EAAQA,EAAMK,MAAM,KAAKC,KAAK,OACxBC,EATmB,UASVT,EATU,kBASeE,GATf,SAUPQ,MAAMD,GAVC,cAUnBE,EAVmB,iBAWNA,EAAIC,OAXE,mBAWnBA,EAXmB,kBAapBA,GAboB,UAapBA,EAAMC,eAbc,aAapB,EAAeC,OAbK,0CAaUV,GAbV,eAcnBW,EAASH,EAAKC,QAAQ,GAC5BG,QAAQC,IAAI,WAAYF,GAExBX,EAASE,UAAT,yCAAuDS,EAAOG,aAC9Dd,EAASC,cAAgBU,EAAOI,eAChCf,EAASgB,aAAeL,EAAOM,cAC/BjB,EAASkB,QAAUP,EAAOQ,aAC1BnB,EAASoB,UAAYT,EAAOU,WAC5BrB,EAASsB,SAAWX,EAAOW,SAtBF,kBAwBlBtB,GAxBkB,4CAAH,sDCAXuB,G,MAAS,SAAC,GAAwC,IAAtCzB,EAAqC,EAArCA,MAAO0B,EAA8B,EAA9BA,aAAchC,EAAgB,EAAhBA,UAC5C,OACE,wBAAQiC,QAASD,EAAchC,UAAS,cAASA,GAAjD,SACGM,MCEM4B,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACJC,wBAASC,GADL,mBAC7BC,EAD6B,KACnBC,EADmB,KAE9BC,EAAUC,cAehB,OATAC,qBAAU,YACW,uCAAG,4BAAAnC,EAAA,sEACGF,EAAY8B,EAAK7B,OADpB,OACdE,EADc,OAEpB+B,EAAY/B,GAFQ,2CAAH,qDAKnBmC,KACC,CAACR,IAECG,EAGH,sBAAKtC,UAAU,OAAf,UACE,qBAAK4C,IAAKN,EAAS5B,UAAWV,UAAU,eAAe6C,IAAI,WAC3D,sBAAK7C,UAAU,cAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BmC,EAAK7B,QACpC,oBAAIN,UAAU,yBAAd,SAAwCsC,EAAS7B,gBACjD,mBAAGT,UAAU,aAAb,SAA2BmC,EAAKW,OAChC,oBAAG9C,UAAU,iBAAb,UACE,wFACCsC,EAASR,YAEZ,oBAAG9B,UAAU,gBAAb,UACE,0GACCmC,EAAKY,WAER,oBAAG/C,UAAU,eAAb,UACE,kFACCmC,EAAKa,YAER,cAAC,EAAD,CACEhD,UAAU,aACVgC,aApCe,WACrBQ,EAAQS,KAAR,gBAAsBd,EAAKe,MAoCrB5C,MAAM,iEAxBQ,MClBX6C,EAAY,WACvB,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMF,MAAMA,SAGjD,OAFgBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,IAAIC,WAE7B,cAAC,EAAD,IAEfJ,EAAMlC,OAGT,qBAAKlB,UAAU,OAAf,SACGoD,EAAMK,KAAI,SAACtB,GAAD,OACT,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKe,SALA,uH,QCZfQ,EAAc,mBACdC,EAAc,mBACdC,EAAc,mBAEdC,EAAc,kBACdC,EAAc,kBAEdC,EAAa,iBACbC,EAAa,iBAEbC,EAAgB,oBAChBC,EAAgB,oBCctB,SAASC,EAAUC,GACxB,OAAO,SAACC,GACNA,EAAS,CAAEvB,KAAMiB,EAAYO,QAASF,IACtCG,YAAW,WACTF,EAMG,CAAEvB,KAAMkB,MALV,M,UCtBMQ,EAAS,WACpB,IAAMH,EAAWI,cAOXC,EAAW,WACH,OAAO,MASrB,OACE,yBAAQ1E,UAAU,SAAlB,UACE,cAAC0E,EAAD,IACA,sBAAK1E,UAAU,eAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CAAM2E,GAAG,IAAT,gGAEF,qBAAK3E,UAAU,qBAAf,SACE,cAAC,EAAD,CAAQgC,aAvBM,WACpBZ,QAAQC,IAAI,SACZgD,EDKK,CAAEvB,KAAMmB,KCgB8B3D,MAAO,8DChCzCsE,G,MAAS,kBAAM,wBAAQ5E,UAAU,SAAlB,yBCCf6E,G,MAAQ,WACnB,IAAMC,EAAUzB,aAAY,SAACC,GAAD,OAAWA,EAAMC,IAAIa,SAEjD,OAAKU,GAAYA,EAAQC,OAGvB,qBAAK/E,UAAU,eAAeC,KAAK,QAAnC,SACG6E,IAJmC,O,yBCE7BE,EAAU,WAAO,IAAD,EACH5C,mBAAS,CAAE9B,MAAO,GAAIyC,QAAS,KAD5B,mBACpBZ,EADoB,KACd8C,EADc,KAErBC,EAAUC,mBAEVd,EAAWI,cACXW,EAAgB/B,aAAY,SAACC,GAAD,OAAWA,EAAMC,IAAI6B,iBAajDC,EAAqB,SAAC,GAAuB,IAAbC,EAAY,EAApBnE,OAC5B8D,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,kBAELD,EAAME,KAAOF,EAAMG,YAkBxB,OAdA/C,qBAAU,WACR,IAAMgD,EAAqB,SAAC,GAAgB,IAAdvE,EAAa,EAAbA,OACvBiE,GACDF,EAAQS,UAAYT,EAAQS,QAAQC,SAASzE,IAC/CkD,EJfC,CAAEvB,KAAMoB,KIoBb,OADA2B,SAASC,iBAAiB,YAAaJ,GAChC,WACLG,SAASE,oBAAoB,YAAaL,MAE3C,CAACR,EAASb,EAAUe,IAElBA,EAGH,qBAAKpF,UAAU,OAAf,SACE,uBAAMgG,IAAKd,EAASlF,UAAU,aAAaiG,SAhCzB,SAACC,GACrBA,EAAEC,iBAJFlB,GAAQ,SAACM,GAAD,mBAAC,eAAeA,GAAhB,IAAsBjF,MAAO,GAAIyC,QAAS,QAMlD,IAAMG,EAAKkD,KAAKC,MAAMC,WACtBjC,ECnBG,SAAoBlC,GACzB,8CAAO,WAAOkC,GAAP,SAAA9D,EAAA,+EAEoBO,MAAMZ,EAAW,CACtCqG,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUxE,KALpB,cAOWyE,IACZvC,EAASF,EAAU,yHARlB,gDAWHE,EAASF,EAAU,yHAXhB,QAaLE,EAAS,CAAEvB,KAAMY,EAAaY,QAASnC,IAblC,yDAAP,sDDkBW0E,CAAW,2BAAK1E,GAAN,IAAYe,UA4B7B,UACE,oBAAIlD,UAAU,cAAd,oGACA,sBAAKA,UAAU,eAAf,UACE,uBACEA,UAAU,cACVwF,KAAK,QACL1C,KAAK,OACLgE,YAAY,mDACZrB,MAAOtD,EAAK7B,MACZyG,SAAU1B,IAGZ,yBACEG,KAAK,OACLuB,SAAU1B,EACVrF,UAAU,cAHZ,UAKE,wBAAQgH,OAAO,OAAf,sCACA,0EACA,kGACA,wGACA,uEAEF,0BACEhH,UAAU,cACV8G,YAAY,qEACZrB,MAAOtD,EAAKY,QACZyC,KAAK,UACLtC,GAAG,UACH+D,KAAM,GACNF,SAAU1B,IAEZ,uBACErF,UAAU,cACVwF,KAAK,WACL1C,KAAK,OACLgE,YAAY,qEACZrB,MAAOtD,EAAKa,SACZ+D,SAAU1B,OAGd,cAAC,EAAD,CAAQ/E,MAAM,6CAAUwC,KAAK,gBA7CR,MExChBoE,G,MAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACE,sBAAKnH,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAMA,UAAU,OAAhB,SAAwBmH,IACxB,cAAC,EAAD,SCNOC,G,MAAW,WAAO,IAAD,EACJhF,wBAASC,GADL,mBACrBF,EADqB,KACf8C,EADe,OAEI7C,wBAASC,GAFb,mBAErBC,EAFqB,KAEXC,EAFW,OAGIH,oBAAS,GAHb,mBAGrBiF,EAHqB,KAGVC,EAHU,OAIAlF,oBAAS,GAJT,mBAIrBmF,EAJqB,KAIZC,EAJY,KAKpBtE,EAAOuE,cAAPvE,GA+BR,OA7BAR,qBAAU,WACR,IAAMC,EAAa,uCAAG,4BAAApC,EAAA,yDACf4B,EADe,iEAEG9B,EAAY8B,EAAK7B,OAFpB,OAEdE,EAFc,OAGpB+B,EAAY/B,GAHQ,2CAAH,sDAsBlB2B,GAhBc,uCAAG,8BAAA5B,EAAA,6DAChB+G,GAAW,GADK,kBAGSxG,MAAM,GAAD,OAAIZ,EAAJ,YAAiBgD,IAH/B,WAGRwE,EAHQ,QAIAd,GAJA,uBAKZY,GAAS,GALG,2CAQKE,EAAS1G,OARd,QAQRA,EARQ,OASdiE,EAAQjE,GATM,kDAWdwG,GAAS,GAXK,QAahBF,GAAW,GAbK,0DAAH,oDAgBNK,IACRrF,GAAYK,MAGZ,CAACO,EAAIqE,EAASF,IAEbE,EAAgB,kIAEhBF,GAAclF,GAASG,EAGzB,sBAAKtC,UAAU,YAAf,UACE,+BACGmC,EAAK7B,MADR,MACkBgC,EAAS7B,eAAiB6B,EAASd,gBAErD,4BAAIW,EAAKW,OACT,sBAAK9C,UAAU,mBAAf,UACE,8BACE,qBAAK4C,IAAKN,EAAS5B,UAAWmC,IAAI,aAEpC,gCACE,8BACE,wFACCP,EAASR,YAEZ,8BACE,0GACCK,EAAKY,WAER,8BACE,4EACCT,EAASZ,WAEZ,8BACE,kFACCS,EAAKa,qBA3B4B,cAAC,EAAD,MC5B/B4E,EAbH,kBACV,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,Y,wBCHFC,EAAe,CACnBtE,SAAS,EACTY,MAAO,KACPgB,eAAe,G,QCVX0C,EAAe,CACnB1E,MAAO,ICCI2E,EAAOC,YAAgB,CAAE5E,MDEjB,WAAmC,IAAlCE,EAAiC,uDAAzBwE,EAAcG,EAAW,uCACrD,OAAQA,EAAOnF,MACb,KAAKY,EACH,OAAO,2BAAKJ,GAAZ,IAAmBF,MAAM,CAAE6E,EAAO3D,SAAV,mBAAsBhB,EAAMF,UACtD,KAAKQ,EACH,OAAO,2BACFN,GADL,IAEEF,MAAM,YAAKE,EAAMF,MAAM8E,QAAO,SAAC/F,GAAD,OAAUA,EAAKe,KAAO+E,EAAO3D,cAE/D,KAAKX,EACH,OAAO,2BAAKL,GAAZ,IAAmBF,MAAO6E,EAAO3D,UACnC,QACE,OAAOhB,ICdgCC,IFW1B,WAAmC,IAAlCD,EAAiC,uDAAzBwE,EAAcG,EAAW,uCACnD,OAAQA,EAAOnF,MACb,KAAKe,EACH,OAAO,2BAAKP,GAAZ,IAAmBE,SAAS,IAC9B,KAAKM,EACH,OAAO,2BAAKR,GAAZ,IAAmBE,SAAS,IAC9B,KAAKO,EACH,OAAO,2BAAKT,GAAZ,IAAmBc,MAAO6D,EAAO3D,UACnC,KAAKN,EACH,OAAO,2BAAKV,GAAZ,IAAmBc,MAAO,OAC5B,KAAKH,EACH,OAAO,2BAAKX,GAAZ,IAAmB8B,eAAe,IACpC,KAAKlB,EACH,OAAO,2BAAKZ,GAAZ,IAAmB8B,eAAe,IACpC,QACE,OAAO9B,MGzBA6E,EAAQC,YAAYL,EAAMM,YAAgBC,KCA5B,SAAC,GAAD,IAAGjE,EAAH,EAAGA,SAAH,OAAkB,SAACkE,GAAD,OAAU,SAACN,GACtD,GAAIA,EAAOnF,OAASY,EAAa,CAAC,IAAD,EACJuE,EAAO3D,QAA1BhE,EADuB,EACvBA,MAAOyC,EADgB,EAChBA,QAEf,IAAKzC,EAAMyE,OACT,OAAOV,EAASF,EAAU,gGAG5B,IAAKpB,EAAQgC,OACX,OAAOV,EAASF,EAAU,wHAY9B,OAAOoE,EAAKN,SCfdE,EAAM9D,STmBJ,uCAAO,WAAOA,GAAP,iBAAA9D,EAAA,6DACL8D,ELrBK,CAAEvB,KAAMe,IKoBR,SAGHzC,QAAQC,IAAI,cAAenB,GAHxB,SAIoBY,MAAMZ,GAJ1B,cAIGwH,EAJH,QAKWd,IACZvC,EAASF,EAAU,yHANlB,SAQgBuD,EAAS1G,OARzB,OAQGA,EARH,OASHqD,EAAS,CAAEvB,KAAMa,EAAaW,QAAStD,EAAKwH,YATzC,kDAWHnE,EAASF,EAAU,6GAXhB,QAaLE,EL7BK,CAAEvB,KAAMgB,IKgBR,0DAAP,uDSjBF2E,iBACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJtC,SAAS6C,eAAe,W","file":"static/js/main.57aedf0c.chunk.js","sourcesContent":["export const Loader = () => {\n  return (\n    <div className=\"spinner-border text-danger\" role=\"status\">\n      <div className=\"sr-only\">Loading...</div>\n    </div>\n  );\n};\n","const isDev = process.env.NODE_ENV === 'development';\n\nconst TMDB_API_KEY = 'eeddb6b3c7a58009b97b8dde8b85c32d';\nconst POSTER_W = 200;\nconst POSTER_H = 400;\nconst API_URL = isDev\n  ? 'http://0.0.0.0:3004'\n  : 'https://my-json-server.typicode.com/kvrvgixzis/watch-list-react-app';\n\nexport const API_FILMS = `${API_URL}/films`;\nexport const PLACEHOLDER_POSTER_URL = `https://via.placeholder.com/${POSTER_W}x${POSTER_H}?text=Poster+not+found`;\nexport const TMDB_SEARCH_URL = `https://api.themoviedb.org/3/search/multi?api_key=${TMDB_API_KEY}&language=ru`;\n","import { PLACEHOLDER_POSTER_URL, TMDB_SEARCH_URL } from './urls';\n\nexport const getTMDBData = async (title) => {\n  const filmData = {\n    originalTitle: '',\n    posterUrl: PLACEHOLDER_POSTER_URL,\n  };\n\n  if (!title) return filmData;\n\n  title = title.split(' ').join('%20');\n  const url = `${TMDB_SEARCH_URL}&query=${title}`;\n  const res = await fetch(url);\n  const json = await res.json();\n\n  if (!json?.results?.length) return filmData;\n  const target = json.results[0];\n  console.log('target: ', target);\n\n  filmData.posterUrl = `http://image.tmdb.org/t/p/w500/${target.poster_path}`;\n  filmData.originalTitle = target.original_title;\n  filmData.originalName = target.original_name;\n  filmData.voteAvg = target.vote_average;\n  filmData.voteCount = target.vote_count;\n  filmData.overview = target.overview;\n\n  return filmData;\n};\n","import '../styles/Button.css';\n\nexport const Button = ({ title, clickHandler, className }) => {\n  return (\n    <button onClick={clickHandler} className={`btn ${className}`}>\n      {title}\n    </button>\n  );\n};\n","import '../styles/FilmCard.css';\n\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getTMDBData } from '../api/TMDB';\nimport { Button } from './Button';\n\nexport const FilmCard = ({ film }) => {\n  const [TMDBData, setTMDBData] = useState(undefined);\n  const history = useHistory();\n\n  const openBtnHandler = () => {\n    history.push(`/film/${film.id}`);\n  };\n\n  useEffect(() => {\n    const fetchTMDBData = async () => {\n      const filmData = await getTMDBData(film.title);\n      setTMDBData(filmData);\n    };\n\n    fetchTMDBData();\n  }, [film]);\n\n  if (!TMDBData) return null;\n\n  return (\n    <div className=\"card\">\n      <img src={TMDBData.posterUrl} className=\"card__poster\" alt=\"poster\" />\n      <div className=\"card__about\">\n        <h3 className=\"card__heading\">{film.title}</h3>\n        <h3 className=\"card__heading-original\">{TMDBData.originalTitle}</h3>\n        <p className=\"card__type\">{film.type}</p>\n        <p className=\"card__overview\">\n          <strong>Описание: </strong>\n          {TMDBData.overview}\n        </p>\n        <p className=\"card__comment\">\n          <strong>Комментарий: </strong>\n          {film.comment}\n        </p>\n        <p className=\"card__author\">\n          <strong>Добавил: </strong>\n          {film.added_by}\n        </p>\n        <Button\n          className=\"card__open\"\n          clickHandler={openBtnHandler}\n          title=\"Подробнее\"\n        />\n      </div>\n    </div>\n  );\n};\n","import '../styles/FilmsPage.css';\n\nimport { useSelector } from 'react-redux';\nimport { Loader } from '../components/Loader';\nimport { FilmCard } from '../components/FilmCard';\n\nexport const FilmsPage = () => {\n  const films = useSelector((state) => state.films.films);\n  const loading = useSelector((state) => state.app.loading);\n\n  if (loading) return <Loader />;\n\n  if (!films.length) return <div>Фильмов нет ¯\\_(ツ)_/¯</div>;\n\n  return (\n    <div className=\"grid\">\n      {films.map((film) => (\n        <FilmCard key={film.id} film={film} />\n      ))}\n    </div>\n  );\n};\n","export const CREATE_FILM = 'FILM/CREATE_POST';\nexport const FETCH_FILMS = 'FILM/FETCH_FILMS';\nexport const DELETE_FILM = 'FILM/DELETE_FILM';\n\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\n\nexport const SHOW_ALERT = 'APP/SHOW_ALERT';\nexport const HIDE_ALERT = 'APP/HIDE_ALERT';\n\nexport const SHOW_ADD_FORM = 'APP/SHOW_ADD_FORM';\nexport const HIDE_ADD_FORM = 'APP/HIDE_ADD_FORM';\n","import {\n  HIDE_ADD_FORM,\n  HIDE_ALERT,\n  HIDE_LOADER,\n  SHOW_ADD_FORM,\n  SHOW_ALERT,\n  SHOW_LOADER,\n} from '../types';\n\nexport function showLoader() {\n  return { type: SHOW_LOADER };\n}\n\nexport function hideLoader() {\n  return { type: HIDE_LOADER };\n}\n\nexport function showAddForm() {\n  return { type: SHOW_ADD_FORM };\n}\n\nexport function hideAddForm() {\n  return { type: HIDE_ADD_FORM };\n}\n\nexport function showAlert(alert) {\n  return (dispatch) => {\n    dispatch({ type: SHOW_ALERT, payload: alert });\n    setTimeout(() => {\n      dispatch(hideAlert());\n    }, 2000);\n  };\n}\n\nexport function hideAlert() {\n  return { type: HIDE_ALERT };\n}\n","import { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { showAddForm } from '../redux/actions/app';\nimport '../styles/Header.css';\nimport { Button } from './Button';\n\nconst isDev = process.env.NODE_ENV === 'development';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n\n  const addBtnHandler = () => {\n    console.log('Hello');\n    dispatch(showAddForm());\n  };\n\n  const DevBlock = () => {\n    if (!isDev) return null;\n\n    return (\n      <div className=\"dev-block\">\n        You are running this application in <b>{process.env.NODE_ENV}</b> mode.\n      </div>\n    );\n  };\n\n  return (\n    <header className=\"header\">\n      <DevBlock />\n      <div className=\"header__body\">\n        <div className=\"header__title\">\n          <Link to=\"/\">Что посмотреть?</Link>\n        </div>\n        <div className=\"header__right-pane\">\n          <Button clickHandler={addBtnHandler} title={'Добавить'} />\n        </div>\n      </div>\n    </header>\n  );\n};\n","import '../styles/Footer.css';\n\nexport const Footer = () => <footer className=\"footer\">by nktpfn</footer>;\n","import { useSelector } from 'react-redux';\nimport '../styles/Alert.css';\n\nexport const Alert = () => {\n  const message = useSelector((state) => state.app.alert);\n\n  if (!message || !message.trim()) return null;\n\n  return (\n    <div className=\"notification\" role=\"alert\">\n      {message}\n    </div>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideAddForm } from '../redux/actions/app';\nimport { createFilm } from '../redux/actions/films';\n\nimport '../styles/AddForm.css';\nimport { Button } from './Button';\n\nexport const AddForm = () => {\n  const [film, setFilm] = useState({ title: '', comment: '' });\n  const formRef = useRef();\n\n  const dispatch = useDispatch();\n  const isAddFormShow = useSelector((state) => state.app.isAddFormShow);\n\n  const clearInput = () => {\n    setFilm((prev) => ({ ...prev, title: '', comment: '' }));\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    clearInput();\n    const id = Date.now().toString();\n    dispatch(createFilm({ ...film, id }));\n  };\n\n  const changeInputHandler = ({ target: input }) => {\n    setFilm((prev) => ({\n      ...prev,\n      [input.name]: input.value,\n    }));\n  };\n\n  useEffect(() => {\n    const handleClickOutside = ({ target }) => {\n      if (!isAddFormShow) return;\n      if (formRef.current && !formRef.current.contains(target)) {\n        dispatch(hideAddForm());\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [formRef, dispatch, isAddFormShow]);\n\n  if (!isAddFormShow) return null;\n\n  return (\n    <div className=\"form\">\n      <form ref={formRef} className=\"form__body\" onSubmit={submitHandler}>\n        <h5 className=\"form__title\">Что посоветуешь?</h5>\n        <div className=\"form__inputs\">\n          <input\n            className=\"form__input\"\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Название\"\n            value={film.title}\n            onChange={changeInputHandler}\n          />\n\n          <select\n            name=\"type\"\n            onChange={changeInputHandler}\n            className=\"form__input\"\n          >\n            <option select=\"true\">Кино</option>\n            <option>Сериал</option>\n            <option>Мультфильм</option>\n            <option>Мультсериал</option>\n            <option>Аниме</option>\n          </select>\n          <textarea\n            className=\"form__input\"\n            placeholder=\"Комментарий\"\n            value={film.comment}\n            name=\"comment\"\n            id=\"comment\"\n            rows={10}\n            onChange={changeInputHandler}\n          />\n          <input\n            className=\"form__input\"\n            name=\"added_by\"\n            type=\"text\"\n            placeholder=\"Представься\"\n            value={film.added_by}\n            onChange={changeInputHandler}\n          />\n        </div>\n        <Button title=\"Создать\" type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default AddForm;\n","import { API_FILMS } from '../../api/urls';\nimport { CREATE_FILM, DELETE_FILM, FETCH_FILMS } from '../types';\nimport { hideLoader, showAlert, showLoader } from './app';\n\nexport function createFilm(film) {\n  return async (dispatch) => {\n    try {\n      const response = await fetch(API_FILMS, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(film),\n      });\n      if (!response.ok) {\n        dispatch(showAlert('Ошибка при сохранении'));\n      }\n    } catch (error) {\n      dispatch(showAlert('Ошибка при сохранении'));\n    }\n    dispatch({ type: CREATE_FILM, payload: film });\n  };\n}\n\nexport function deleteFilm(id) {\n  return {\n    type: DELETE_FILM,\n    payload: id,\n  };\n}\n\nexport function fetchFilms() {\n  return async (dispatch) => {\n    dispatch(showLoader());\n    try {\n      console.log('API_FILMS: ', API_FILMS);\n      const response = await fetch(API_FILMS);\n      if (!response.ok) {\n        dispatch(showAlert('Ошибка при сохранении'));\n      }\n      const json = await response.json();\n      dispatch({ type: FETCH_FILMS, payload: json.reverse() });\n    } catch (error) {\n      dispatch(showAlert('Ошибка при загрузке'));\n    }\n    dispatch(hideLoader());\n  };\n}\n","import { Header } from '../components/Header';\nimport { Footer } from '../components/Footer';\nimport { Alert } from '../components/Alert';\nimport { AddForm } from '../components/AddForm';\n\nimport '../styles/MainLayout.css';\n\nexport const MainLayout = ({ children }) => {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Alert />\n      <AddForm />\n      <main className=\"root\">{children}</main>\n      <Footer />\n    </div>\n  );\n};\n","import '../styles/FilmPage.css';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API_FILMS } from '../api/urls';\nimport { getTMDBData } from '../api/TMDB';\nimport { Loader } from '../components/Loader';\n\nexport const FilmPage = () => {\n  const [film, setFilm] = useState(undefined);\n  const [TMDBData, setTMDBData] = useState(undefined);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchTMDBData = async () => {\n      if (!film) return;\n      const filmData = await getTMDBData(film.title);\n      setTMDBData(filmData);\n    };\n\n    const fetchFilm = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`${API_FILMS}/${id}`);\n        if (!response.ok) {\n          setError(true);\n          return;\n        }\n        const json = await response.json();\n        setFilm(json);\n      } catch (error) {\n        setError(true);\n      }\n      setLoading(false);\n    };\n\n    !film && fetchFilm();\n    !TMDBData && fetchTMDBData();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, isError, isLoading]);\n\n  if (isError) return <div>Что-то пошло не так</div>;\n\n  if (isLoading || !film || !TMDBData) return <Loader />;\n\n  return (\n    <div className=\"film-page\">\n      <h1>\n        {film.title} | {TMDBData.originalTitle || TMDBData.originalName}\n      </h1>\n      <p>{film.type}</p>\n      <div className=\"film-page__about\">\n        <div>\n          <img src={TMDBData.posterUrl} alt=\"poster\" />\n        </div>\n        <div>\n          <p>\n            <strong>Описание: </strong>\n            {TMDBData.overview}\n          </p>\n          <p>\n            <strong>Комментарий: </strong>\n            {film.comment}\n          </p>\n          <p>\n            <strong>Оценка: </strong>\n            {TMDBData.voteAvg}\n          </p>\n          <p>\n            <strong>Добавил: </strong>\n            {film.added_by}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FilmsPage } from '../pages/FilmsPage';\nimport { MainLayout } from '../layouts/MainLayout';\nimport { Switch, Route } from 'react-router-dom';\nimport { FilmPage } from '../pages/FilmPage';\n\nconst App = () => (\n  <MainLayout>\n    <Switch>\n      <Route path=\"/film/:id\">\n        <FilmPage />\n      </Route>\n      <Route path=\"/\">\n        <FilmsPage />\n      </Route>\n    </Switch>\n  </MainLayout>\n);\n\nexport default App;\n","import {\n  HIDE_LOADER,\n  SHOW_LOADER,\n  SHOW_ALERT,\n  HIDE_ALERT,\n  SHOW_ADD_FORM,\n  HIDE_ADD_FORM,\n} from '../types';\n\nconst initialState = {\n  loading: false,\n  alert: null,\n  isAddFormShow: false,\n};\n\nexport const app = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return { ...state, loading: true };\n    case HIDE_LOADER:\n      return { ...state, loading: false };\n    case SHOW_ALERT:\n      return { ...state, alert: action.payload };\n    case HIDE_ALERT:\n      return { ...state, alert: null };\n    case SHOW_ADD_FORM:\n      return { ...state, isAddFormShow: true };\n    case HIDE_ADD_FORM:\n      return { ...state, isAddFormShow: false };\n    default:\n      return state;\n  }\n};\n","import { CREATE_FILM, DELETE_FILM, FETCH_FILMS } from '../types';\n\nconst initialState = {\n  films: [],\n};\n\nexport const films = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_FILM:\n      return { ...state, films: [action.payload, ...state.films] };\n    case DELETE_FILM:\n      return {\n        ...state,\n        films: [...state.films.filter((film) => film.id !== action.payload)],\n      };\n    case FETCH_FILMS:\n      return { ...state, films: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { app } from './app';\nimport { films } from './films';\n\nexport const root = combineReducers({ films, app });\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { inputFilter } from './middleware';\nimport { root } from './reducers/root';\n\nexport const store = createStore(root, applyMiddleware(thunk, inputFilter));\n","import { showAlert } from './actions/app';\nimport { CREATE_FILM } from './types';\n\n// const forbiddenWords = [];\n\nexport const inputFilter = ({ dispatch }) => (next) => (action) => {\n  if (action.type === CREATE_FILM) {\n    const { title, comment } = action.payload;\n\n    if (!title.trim()) {\n      return dispatch(showAlert('Введите название'));\n    }\n\n    if (!comment.trim()) {\n      return dispatch(showAlert('Оставьте комментарий'));\n    }\n\n    // const foundForbiddenWords = forbiddenWords.filter(\n    //   (w) => title.includes(w) || comment.includes(w)\n    // );\n\n    // if (foundForbiddenWords.length) {\n    //   return dispatch(showAlert('Статья содержит недопустимые слова'));\n    // }\n  }\n\n  return next(action);\n};\n","import { render } from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { fetchFilms } from './redux/actions/films';\n\nstore.dispatch(fetchFilms());\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}