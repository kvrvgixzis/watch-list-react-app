{"version":3,"sources":["components/Alert.js","components/Loader.js","components/FilmCard.js","components/Films.js","redux/types.js","redux/actions/app.js","api/urls.js","components/Button.js","components/AddForm.js","redux/actions/films.js","components/Header.js","components/Footer.js","layouts/MainLayout.js","components/App.js","redux/reducers/app.js","redux/reducers/films.js","redux/reducers/root.js","redux/store.js","redux/middleware.js","index.js"],"names":["Alert","message","useSelector","state","app","alert","trim","className","role","Loader","PLACEHOLDER_SRC","getFilmData","title","a","filmData","originalTitle","posterUrl","split","join","url","fetch","res","json","results","length","target","console","log","posterPath","poster_path","original_title","overview","FilmCard","film","useState","undefined","setFilmData","useEffect","fetchFilmData","src","alt","type","comment","added_by","Films","films","loading","map","id","CREATE_FILM","FETCH_FILMS","DELETE_FILM","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","SHOW_ADD_FORM","HIDE_ADD_FORM","showAlert","dispatch","payload","setTimeout","API_FILMS","Button","clickHandler","onClick","AddForm","setFilm","formRef","useRef","useDispatch","isAddFormShow","changeInputHandler","input","prev","name","value","handleClickOutside","current","contains","document","addEventListener","removeEventListener","ref","onSubmit","e","preventDefault","Date","now","toString","method","headers","body","JSON","stringify","ok","createFilm","placeholder","onChange","select","rows","Header","DevBlock","Footer","MainLayout","children","App","initialState","root","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","next","response","render","getElementById"],"mappings":"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","file":"static/js/main.f635b406.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\nimport '../styles/Alert.css';\n\nexport const Alert = () => {\n  const message = useSelector((state) => state.app.alert);\n\n  if (!message || !message.trim()) return null;\n\n  return (\n    <div className=\"notification\" role=\"alert\">\n      {message}\n    </div>\n  );\n};\n","export const Loader = () => {\n  return (\n    <div className=\"spinner-border text-danger\" role=\"status\">\n      <div className=\"sr-only\">Loading...</div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nconst API_KEY = 'eeddb6b3c7a58009b97b8dde8b85c32d';\nconst POSTER_W = 200;\nconst POSTER_H = 400;\nconst PLACEHOLDER_SRC = `https://via.placeholder.com/${POSTER_W}x${POSTER_H}?text=Poster+not+found`;\n\nconst getFilmData = async (title) => {\n  const filmData = {\n    originalTitle: '',\n    posterUrl: PLACEHOLDER_SRC,\n  };\n\n  if (!title) return filmData;\n\n  title = title.split(' ').join('%20');\n  const url = `https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&query=${title}&&language=ru`;\n  const res = await fetch(url);\n  const json = await res.json();\n\n  if (!json?.results?.length) return filmData;\n  const target = json.results[0];\n\n  console.log(`${title}: `, target);\n\n  const posterPath = target.poster_path;\n  filmData.posterUrl = `http://image.tmdb.org/t/p/w500/${posterPath}`;\n  filmData.originalTitle = target.original_title;\n  filmData.overview = target.overview;\n  return filmData;\n};\n\nexport const FilmCard = ({ film }) => {\n  const [filmData, setFilmData] = useState(undefined);\n\n  useEffect(() => {\n    const fetchFilmData = async () => {\n      const filmData = await getFilmData(film.title);\n      setFilmData(filmData);\n    };\n\n    fetchFilmData();\n  }, [film]);\n\n  if (!filmData) return null;\n\n  return (\n    <div className=\"card\">\n      <img src={filmData.posterUrl} className=\"card__poster\" alt=\"poster\" />\n      <div className=\"card__about\">\n        <h3 className=\"card__heading\">{film.title}</h3>\n        <h3 className=\"card__heading-original\">{filmData.originalTitle}</h3>\n        <p className=\"card__type\">{film.type}</p>\n        <p className=\"card__overview\">\n          <strong>Описание: </strong>\n          {filmData.overview}\n        </p>\n        <p className=\"card__comment\">\n          <strong>Комментарий: </strong>\n          {film.comment}\n        </p>\n        <p className=\"card__author\">\n          <strong>Добавил: </strong>\n          {film.added_by}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Loader } from './Loader';\nimport { FilmCard } from './FilmCard';\nimport '../styles/Films.css';\nimport '../styles/FilmCard.css';\n\nexport const Films = () => {\n  const films = useSelector((state) => state.films.films);\n  const loading = useSelector((state) => state.app.loading);\n\n  if (loading) return <Loader />;\n\n  if (!films.length) return <div>Фильмов нет ¯\\_(ツ)_/¯</div>;\n\n  return (\n    <div className=\"grid\">\n      {films.map((film) => (\n        <FilmCard key={film.id} film={film} />\n      ))}\n    </div>\n  );\n};\n\nexport default Films;\n","export const CREATE_FILM = 'FILM/CREATE_POST';\nexport const FETCH_FILMS = 'FILM/FETCH_FILMS';\nexport const DELETE_FILM = 'FILM/DELETE_FILM';\n\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\n\nexport const SHOW_ALERT = 'APP/SHOW_ALERT';\nexport const HIDE_ALERT = 'APP/HIDE_ALERT';\n\nexport const SHOW_ADD_FORM = 'APP/SHOW_ADD_FORM';\nexport const HIDE_ADD_FORM = 'APP/HIDE_ADD_FORM';\n","import {\n  HIDE_ADD_FORM,\n  HIDE_ALERT,\n  HIDE_LOADER,\n  SHOW_ADD_FORM,\n  SHOW_ALERT,\n  SHOW_LOADER,\n} from '../types';\n\nexport function showLoader() {\n  return { type: SHOW_LOADER };\n}\n\nexport function hideLoader() {\n  return { type: HIDE_LOADER };\n}\n\nexport function showAddForm() {\n  return { type: SHOW_ADD_FORM };\n}\n\nexport function hideAddForm() {\n  return { type: HIDE_ADD_FORM };\n}\n\nexport function showAlert(alert) {\n  return (dispatch) => {\n    dispatch({ type: SHOW_ALERT, payload: alert });\n    setTimeout(() => {\n      dispatch(hideAlert());\n    }, 2000);\n  };\n}\n\nexport function hideAlert() {\n  return { type: HIDE_ALERT };\n}\n","const isDev = process.env.NODE_ENV === 'development';\n\nconst API_URL = isDev\n  ? 'http://0.0.0.0:3004'\n  : 'https://my-json-server.typicode.com/kvrvgixzis/watch-list-react-app';\n\nexport const API_FILMS = `${API_URL}/films`;\n","import '../styles/Button.css';\n\nexport const Button = ({ title, clickHandler }) => {\n  return (\n    <button onClick={clickHandler} className=\"btn\">\n      {title}\n    </button>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideAddForm } from '../redux/actions/app';\nimport { createFilm } from '../redux/actions/films';\n\nimport '../styles/AddForm.css';\nimport { Button } from './Button';\n\nexport const AddForm = () => {\n  const [film, setFilm] = useState({ title: '', comment: '' });\n  const formRef = useRef();\n\n  const dispatch = useDispatch();\n  const isAddFormShow = useSelector((state) => state.app.isAddFormShow);\n\n  const clearInput = () => {\n    setFilm((prev) => ({ ...prev, title: '', comment: '' }));\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    clearInput();\n    const id = Date.now().toString();\n    dispatch(createFilm({ ...film, id }));\n  };\n\n  const changeInputHandler = ({ target: input }) => {\n    setFilm((prev) => ({\n      ...prev,\n      [input.name]: input.value,\n    }));\n  };\n\n  useEffect(() => {\n    const handleClickOutside = ({ target }) => {\n      if (!isAddFormShow) return;\n      if (formRef.current && !formRef.current.contains(target)) {\n        dispatch(hideAddForm());\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [formRef, dispatch, isAddFormShow]);\n\n  if (!isAddFormShow) return null;\n\n  return (\n    <div className=\"form\">\n      <form ref={formRef} className=\"form__body\" onSubmit={submitHandler}>\n        <h5 className=\"form__title\">Что посоветуешь?</h5>\n        <div className=\"form__inputs\">\n          <input\n            className=\"form__input\"\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Название\"\n            value={film.title}\n            onChange={changeInputHandler}\n          />\n\n          <select\n            name=\"type\"\n            onChange={changeInputHandler}\n            className=\"form__input\"\n          >\n            <option select=\"true\">Кино</option>\n            <option>Сериал</option>\n            <option>Мультфильм</option>\n            <option>Мультсериал</option>\n            <option>Аниме</option>\n          </select>\n          <textarea\n            className=\"form__input\"\n            placeholder=\"Комментарий\"\n            value={film.comment}\n            name=\"comment\"\n            id=\"comment\"\n            rows={10}\n            onChange={changeInputHandler}\n          />\n          <input\n            className=\"form__input\"\n            name=\"added_by\"\n            type=\"text\"\n            placeholder=\"Представься\"\n            value={film.added_by}\n            onChange={changeInputHandler}\n          />\n        </div>\n        <Button title=\"Создать\" type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default AddForm;\n","import { API_FILMS } from '../../api/urls';\nimport { CREATE_FILM, DELETE_FILM, FETCH_FILMS } from '../types';\nimport { hideLoader, showAlert, showLoader } from './app';\n\nexport function createFilm(film) {\n  return async (dispatch) => {\n    try {\n      const response = await fetch(API_FILMS, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(film),\n      });\n      if (!response.ok) {\n        dispatch(showAlert('Ошибка при сохранении'));\n      }\n    } catch (error) {\n      dispatch(showAlert('Ошибка при сохранении'));\n    }\n    dispatch({ type: CREATE_FILM, payload: film });\n  };\n}\n\nexport function deleteFilm(id) {\n  return {\n    type: DELETE_FILM,\n    payload: id,\n  };\n}\n\nexport function fetchFilms() {\n  return async (dispatch) => {\n    dispatch(showLoader());\n    try {\n      console.log('API_FILMS: ', API_FILMS);\n      const response = await fetch(API_FILMS);\n      if (!response.ok) {\n        dispatch(showAlert('Ошибка при сохранении'));\n      }\n      const json = await response.json();\n      dispatch({ type: FETCH_FILMS, payload: json });\n    } catch (error) {\n      dispatch(showAlert('Ошибка при загрузке'));\n    }\n    dispatch(hideLoader());\n  };\n}\n","import { useDispatch } from 'react-redux';\nimport { showAddForm } from '../redux/actions/app';\nimport '../styles/Header.css';\nimport { Button } from './Button';\n\nconst isDev = process.env.NODE_ENV === 'development';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n\n  const addBtnHandler = () => {\n    console.log('Hello');\n    dispatch(showAddForm());\n  };\n\n  const DevBlock = () => {\n    if (!isDev) return null;\n\n    return (\n      <div className=\"dev-block\">\n        You are running this application in <b>{process.env.NODE_ENV}</b> mode.\n      </div>\n    );\n  };\n\n  return (\n    <header className=\"header\">\n      <DevBlock />\n      <div className=\"header__body\">\n        <div className=\"header__title\">Что посмотреть?</div>\n        <div className=\"header__right-pane\">\n          <Button clickHandler={addBtnHandler} title={'Добавить'} />\n        </div>\n      </div>\n    </header>\n  );\n};\n","import '../styles/Footer.css';\n\nexport const Footer = () => <footer className=\"footer\">by nktpfn</footer>;\n","import { Header } from '../components/Header';\nimport { Footer } from '../components/Footer';\n\nimport '../styles/MainLayout.css';\n\nexport const MainLayout = ({ children }) => {\n  return (\n    <div className=\"container\">\n      <Header />\n      <main className=\"root\">{children}</main>\n      <Footer />\n    </div>\n  );\n};\n","import { Alert } from './Alert';\nimport { Films } from './Films';\nimport { AddForm } from './AddForm';\nimport { MainLayout } from '../layouts/MainLayout';\n\nconst App = () => (\n  <MainLayout>\n    <Alert />\n    <AddForm />\n    <Films />\n  </MainLayout>\n);\n\nexport default App;\n","import {\n  HIDE_LOADER,\n  SHOW_LOADER,\n  SHOW_ALERT,\n  HIDE_ALERT,\n  SHOW_ADD_FORM,\n  HIDE_ADD_FORM,\n} from '../types';\n\nconst initialState = {\n  loading: false,\n  alert: null,\n  isAddFormShow: false,\n};\n\nexport const app = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return { ...state, loading: true };\n    case HIDE_LOADER:\n      return { ...state, loading: false };\n    case SHOW_ALERT:\n      return { ...state, alert: action.payload };\n    case HIDE_ALERT:\n      return { ...state, alert: null };\n    case SHOW_ADD_FORM:\n      return { ...state, isAddFormShow: true };\n    case HIDE_ADD_FORM:\n      return { ...state, isAddFormShow: false };\n    default:\n      return state;\n  }\n};\n","import { CREATE_FILM, DELETE_FILM, FETCH_FILMS } from '../types';\n\nconst initialState = {\n  films: [],\n};\n\nexport const films = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_FILM:\n      return { ...state, films: [action.payload, ...state.films] };\n    case DELETE_FILM:\n      return {\n        ...state,\n        films: [...state.films.filter((film) => film.id !== action.payload)],\n      };\n    case FETCH_FILMS:\n      return { ...state, films: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { app } from './app';\nimport { films } from './films';\n\nexport const root = combineReducers({ films, app });\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { inputFilter } from './middleware';\nimport { root } from './reducers/root';\n\nexport const store = createStore(root, applyMiddleware(thunk, inputFilter));\n","import { showAlert } from './actions/app';\nimport { CREATE_FILM } from './types';\n\n// const forbiddenWords = [];\n\nexport const inputFilter = ({ dispatch }) => (next) => (action) => {\n  if (action.type === CREATE_FILM) {\n    const { title, comment } = action.payload;\n\n    if (!title.trim()) {\n      return dispatch(showAlert('Введите название'));\n    }\n\n    if (!comment.trim()) {\n      return dispatch(showAlert('Оставьте комментарий'));\n    }\n\n    // const foundForbiddenWords = forbiddenWords.filter(\n    //   (w) => title.includes(w) || comment.includes(w)\n    // );\n\n    // if (foundForbiddenWords.length) {\n    //   return dispatch(showAlert('Статья содержит недопустимые слова'));\n    // }\n  }\n\n  return next(action);\n};\n","import { render } from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { fetchFilms } from './redux/actions/films';\n\nstore.dispatch(fetchFilms());\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}